/*找出一个二维数组中的鞍点，即该位置上的元素在该行最大，在该列上最小。也可能没有鞍点。
**输入数据格式：
"\n输入行数："
"%d"
"\n输入列数："
"%d"
"第%d行？\n"
"%d"
**输出格式要求：
"%5d"
"\n第%d行，第%d列的%d是鞍点\n"
"\n矩阵中无鞍点!\n"
程序的运行示例1如下：
输入行数：3
输入列数：3
第0行？
1 2 3
第1行？
4 5 6
第2行？
7 8 9
    1    2    3
    4    5    6
    7    8    9

第0行，第2列的3是鞍点
程序的运行示例2如下：
输入行数：2
输入列数：2
第0行？
1 2
第1行？
4 1
    1    2
    4    1

矩阵中无鞍点!*/
#include <stdio.h>
#define N 10
int main()
{
    int row, col,a[N][N];
    int i, j;
    int Rmax = 0, r = 0;
    int x = 0;
    printf("请输入行数：");
        scanf("%d", &row);
        printf("请输入列数：");
        scanf("%d", &col);
        for (i = 0;i < row; i++)
        {
            printf("第%d行：\n",i);
            for (j = 0; j < col; j++)
                scanf("%d", &a[i][j]);
        }
        for (i = 0; i < row; i++)
        {
            for (j = 0; j < col; j++)
                printf("%5d", a[i][j]);
            printf("\n");
        }
            for (i=0,j = 0; j < col; j++)
            {
                if (a[i][j] > Rmax)
                {
                    Rmax = a[i][j];
                    r = j;
                }
            }
            for (i = 0; i < row; i++)
            {
                if (a[i][r] < Rmax)
                {
                    x = -1;
                    break;
                }
            }
            if (x == -1)
                printf("矩阵中无鞍点！");
            else printf("第%d行第%d列的%d是鞍点！", 0, r, Rmax);
    return 0;
}
